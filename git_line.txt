git 常用命令
1.git 应用端
  msysgit是Windows版的Git，从https://git-for-windows.github.io下载
  
2.配置用户，和邮件，参数 --global 为global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"

3.查看当前的配置
  git config --list
  或查看具体项设置
  git config user.name
  
3.创建一个库
  mkdir 目录名(库名)
  cd 目录名(库名)
  git init  
  
4.将文件添加到版本库
git add 文件名
git commit -m "修改标注"
  
5.查看目前状态
git status

6.查看与上次提交的差异
git diff 文件名

7.查看提交的日志
git log 
或者按条线格式
git log --pretty=oneline
  
8.回退提交过的版本 
git reset --hard HEAD^  #回退到最近一次提交的版本
git reset --hard 3628164(版本号)

9.查看回退过的版本号
git reflog

10.文件做了修改，但未提交，也为git add，可以取消修改
git checkout -- filename

11.文件做了修改，提交到了git add 暂存区，但没有提交
首先：git reset HEAD filename   #也可以把暂存区的修改回退到工作区
然后：git checkout -- filename

12.删除文件后，两种情况确认或取消
确认：git rm filename
      git commit -m ""
取消：git checkout -- filename

13.远程仓库的配置
第1步：创建SSH Key。在用户主目录下（Windows c:\用户\用户名，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，
        如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：
		ssh-keygen -t rsa -C "youremail@example.com"
		可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件
第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：

然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容：

14.本地与远程库关联
   以从这个仓库克隆出新的仓库，也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库。
   git remote add origin git@github.com:github账号/库名称.git
   origin 远程仓库的名称，可可以改成别的
   
15.查看远程库详细列表
   git remote -v
   
16.本地库的所有内容推送到远程库上
   git push -u origin master  #origin 远程仓库的名称